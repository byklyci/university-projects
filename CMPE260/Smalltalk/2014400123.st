Object subclass: #Dota	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!!Dota commentStamp: 'user 5/17/2017 22:05' prior: 0!A turn based game.!Dota subclass: #GameArena	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!!GameArena commentStamp: 'user 5/17/2017 22:03' prior: 0!GameArena controls the game.Sends necessary messages (like setHp) to heroes.Contains the methods for choosing heroes, items, actions, calculating damages, skill effects.Call "start" to start the game.!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameArena class	instanceVariableNames: ''!!GameArena class methodsFor: 'game loop' stamp: 'user 5/18/2017 14:15'!dealSkillDamage: hero enemy: enemy skill: skillName	"skills that only deals damage implemented here"	|damage|		(hero getSkillSlot) do: [:each |		(each className) = skillName		ifTrue:[			each setCooldownToMax.			hero setMana: (hero getMana) - (each getManaUsage).			damage := each getDamage. 			].		 ].		(enemy getDecreaseSkillDamagePercentage ) = 0	ifFalse:[ damage := (damage * (1 - ((enemy getDecreaseSkillDamagePercentage)/100 ))) ].		enemy setHp: {(enemy getHp) - (damage) . 0} max.			! !!GameArena class methodsFor: 'game loop' stamp: 'user 5/16/2017 20:21'!decreaseCooldownByOne: player	"Decreases the remaining cooldown of skills of player by 1"	(player getSkillSlot) do:[ :each |		(each getIsPassive) = 0		ifTrue:[			each setRemainingCooldown: ({((each getRemainingCooldown) - 1) . 0} max).			].		].! !!GameArena class methodsFor: 'game loop' stamp: 'user 5/16/2017 20:26'!useItemEffects: player	"Some part of Heart of Tarrasque and Battle Fury (which repeats every turn) is implemented here"	"+? mana each turn"	"increase current hp by ?%"	player setMana: ({((player getMana) + (player getPlusManaEachTurn)) . player getMaxMana } min).	player setHp: ({((player getHp) * (1 + ((player getIncreaseCurrentHpPercentage)/100)) roundTo: 1) . player getMaxHp} min).! !!GameArena class methodsFor: 'game loop' stamp: 'user 5/16/2017 20:22'!start	"Main function of the Dota game"	|player1 player2 turn|	player1 := self chooseHeroForScourge.	player2 := self chooseHeroForSentinel.		player1 setItemSlot: (self chooseItem: 'Player1').	player2 setItemSlot: (self chooseItem: 'Player2').	Transcript cr.		self addEffectOfItemsToUser: player1 otherPlayer: player2.	self addEffectOfItemsToUser: player2 otherPlayer: player1.		turn := 1. "player turn.  if 1, player1 choose action. if 2, player 2 choose action"		[ ( (player1 getHp) ~= 0 ) & ( (player2 getHp) ~= 0 ) ]	whileTrue: [		turn = 1		ifTrue:[ 						self decreaseCooldownByOne: player1.						"Implementation of Pulse Nova"			(player1 className) = 'Leshrac'			ifTrue:[				(player1 getPulseNova) = 1				ifTrue:[					player2 setHp: ({((player2 getHp) - 50) . 0} max).					player1 setMana:({((player1 getMana) -150) . 0} max).					].				]. 						self useItemEffects: player1.			self takeAction: player1 name: 'Player1' enemy: player2.						Transcript show:'Player1''s turn!!' ; cr ; cr.			player1 printHeroInfo.			Transcript cr;cr.			player2 printHeroInfo.			Transcript cr;cr.						turn := 2.			]		ifFalse:[						self decreaseCooldownByOne: player2.						self useItemEffects: player2.			self takeAction: player2 name: 'Player2' enemy: player1.						Transcript show:'Player2''s turn!!' ; cr ; cr.			player1 printHeroInfo.			Transcript cr;cr.			player2 printHeroInfo.			Transcript cr;cr.						turn := 1.			].		].		(player1 getHp) = 0	ifTrue:[		Transcript show: 'Player2 (',((player2 className) asString),') is the winner of the game!!!!!!'		]	ifFalse:[		Transcript show: 'Player1 (', ((player1 className) asString) ,') is the winner of the game!!!!!!'		].! !!GameArena class methodsFor: 'game loop' stamp: 'user 5/16/2017 22:58'!takeAction: player name: playerName enemy: enemy	|action actualDamage damage chance|	action := self chooseAction: player player: playerName.		player setLastAction: (action asString).		action = 'Attack'	ifTrue:[ 				"Implementation of Mana Break (passive skill) description:Decrease 100 Mana per attack"		(player className) = 'Magina'		ifTrue:[ player setMana: {((player getMana) - 100) . 0} max ].						((1 to: 100) atRandom) > (enemy getEvasion)		ifTrue: [			actualDamage := player damageCalculation: (self randomDamage: player) enemyArmor: (enemy getArmor).						"Implementation of Daedalus"			((1 to: 100) atRandom ) < (player getChanceOf2xDamage)			ifTrue:[				actualDamage := actualDamage * 2.				].						"Implementation of Vanguard"			((1 to: 100) atRandom ) < (enemy getChanceOfDecreasingDamage)			ifTrue:[				actualDamage := {(actualDamage - 60) . 0 } max.				].						"Coup de Grace"			(player className) = 'Mortred' 			ifTrue:[				((1 to: 100) atRandom) < 15				ifTrue:[ actualDamage := actualDamage *4 ].  				].						"EnchantTotem" 			(player className) = 'Earthshaker' 			ifTrue:[				player getx4Damage = 1				ifTrue:[					player setx4Damage: 0.					actualDamage := (actualDamage *4).					].				].						"GodsStrength"			(player className) = 'Sven' 			ifTrue:[				(player getx2DamageForTurn) ~= 0				ifTrue:[					actualDamage := (actualDamage *2).					player setx2DamageForTurn: ({((player getx2DamageForTurn)-1) . 0} max).					].				].						"AnchorSmash" 			player getDecreaseEnemyAttack = 1			ifTrue:[				actualDamage := ((actualDamage * 0.4) roundTo:1).				player setDecreaseEnemyAttack: 0.				].						enemy setHp: ( {((enemy getHp) - (actualDamage)) . 0} max).						"Vampiric Aura"			(player className) = 'SkeletonKing' 			ifTrue:[				player setHp: ({((player getHp) + ((actualDamage * 0.15)roundTo:1) ) . (player getMaxHp)} min).				].			 ].		 ].		action = 'HealthPotion'	ifTrue:[			player setHp: ({((player getHp) + 300) . player getMaxHp} min).			player deleteItem: action.		].		action = 'ManaPotion'	ifTrue:[			player setMana: ({((player getMana) + 300) . player getMaxMana} min ).			player deleteItem: action.		].		(action = 'WraithfireBlast') | (action = 'AnchorSmash') | (action = 'Ravage') | (action = 'StormHammer') | (action = 'Fissure') | (action = 'Impale') | (action = 'Starstorm' ) | (action = 'EarthSpike' ) | (action = 'FingerofDeath' ) | (action = 'SplitEarth' ) | (action = 'FrostBite' ) | (action = 'FreezingField' )	ifTrue: [ self dealSkillDamage: player enemy: enemy skill: action ].		action = 'Fireblast' 	ifTrue:[		(player getSkillSlot) do: [:each |			(each className) = action			ifTrue:[				each setCooldownToMax.				player setMana: (player getMana) - (each getManaUsage).				damage := (each getDamage). 			].		 ].			chance := ((1 to: 100) atRandom).		chance <= 60		ifTrue:[ damage := (damage *2) ]		ifFalse:[			chance <= (60+25)			ifTrue:[ damage := (damage *3)]			ifFalse:[				chance <= (60+25+12.5)				ifTrue:[damage := (damage *4)].					].					]. 			(enemy getDecreaseSkillDamagePercentage ) = 0		ifFalse:[ damage := (damage * (1 - ((enemy getDecreaseSkillDamagePercentage)/100 ))) ].			enemy setHp: ({(enemy getHp) - (damage) . 0} max).		].	action = 'ManaVoid' 	ifTrue:[		(player getSkillSlot) do: [:each |			(each className) = action			ifTrue:[				each setCooldownToMax.				player setMana: ((player getMana) - (each getManaUsage)).			].		 ].				damage := (1.1 * ((enemy getMaxMana) - (enemy getMana))).			(enemy getDecreaseSkillDamagePercentage ) = 0		ifFalse:[ damage := (damage * (1 - ((enemy getDecreaseSkillDamagePercentage)/100 ))) ].			enemy setHp: ({(enemy getHp) - (damage) . 0} max).		].	action = 'ManaBurn' 	ifTrue:[		(player getSkillSlot) do: [:each |			(each className) = action			ifTrue:[				each setCooldownToMax.				player setMana: ((player getMana) - (each getManaUsage)).			].		 ].				enemy setMana: (((enemy getMana) * 0.8) roundTo:1).		].	action = 'SacredArrow' 	ifTrue:[		(player getSkillSlot) do: [:each |			(each className) = action			ifTrue:[				each setCooldownToMax.				player setMana: ((player getMana) - (each getManaUsage)).			].		 ].				((1 to: 100) atRandom) < 75 		ifTrue:[ 			damage := 320.						(enemy getDecreaseSkillDamagePercentage ) = 0			ifFalse:[ damage := (damage * (1 - ((enemy getDecreaseSkillDamagePercentage)/100 ))) ].						enemy setHp: ({((enemy getHp) - damage) . 0 } max) 			].		].	action = 'PulseNova'	ifTrue:[		(player getPulseNova) = 0		ifTrue:[ player setPulseNova: 1]		ifFalse:[			player setPulseNova: 0. 			self takeAction: player name: playerName enemy: enemy.			enemy setHp: ({((enemy getHp) - 50) . 0} max).			player setMana:({((player getMana) -150) . 0} max).			].		].		action = 'EnchantTotem' 	ifTrue:[		(player getSkillSlot) do: [:each |			(each className) = action			ifTrue:[				each setCooldownToMax.				player setMana: (player getMana) - (each getManaUsage).			].		 ].				player setx4Damage: 1.		].		action = 'GodsStrength' 	ifTrue:[		(player getSkillSlot) do: [:each |			(each className) = action			ifTrue:[				each setCooldownToMax.				player setMana: (player getMana) - (each getManaUsage).			].		 ].				player setx2DamageForTurn: 3.		].		action = 'AnchorSmash' 	ifTrue:[		enemy setDecreaseEnemyAttack: 1.		].! !!GameArena class methodsFor: 'game loop' stamp: 'user 5/16/2017 20:22'!randomDamage: hero	"Returns a random number between min damage and max damage of hero"	^((hero getMinDamage) to: (hero getMaxDamage)) atRandom.! !!GameArena class methodsFor: 'game loop' stamp: 'user 5/16/2017 20:18'!calculatePercentage: percentage itemCount:itemCount	"Returns the probability of items when player buys multiple items"		"For items that provide features with a certain probability x (such as 25% chance of evasion), buying n pieces of the same item results in the chance:	Total Chance = x + x/2 + x/3 + .... + x/n.	For instance, 2 Daedalus = 37.5% of x2 damage"	|resultPercentage|	resultPercentage := 0.	1 to: itemCount do:[ :i |		resultPercentage := (resultPercentage + (percentage/i) )		].	^resultPercentage.! !!GameArena class methodsFor: 'game loop' stamp: 'user 5/16/2017 20:14'!addEffectOfItemsToUser: potionUser otherPlayer: enemy	"Adds the effects of items (not potions) to the player permanently"	|itemCount|	(potionUser getItemSlot) do: [:each | 			itemCount := (potionUser getItemSlot) count:[:item | (item className) = (each className) ].			(each className) = 'BattleFury'			ifTrue:[				potionUser setMinDamage: ((potionUser getMinDamage) + (55 * itemCount)).				potionUser setMaxDamage: ((potionUser getMaxDamage) + (55 * itemCount)).				potionUser setPlusManaEachTurn: (50 * itemCount).				].			(each className) = 'HoodofDefiance'			ifTrue:[				potionUser setDecreaseSkillDamagePercentage: (self calculatePercentage: 25 itemCount: itemCount ). 				].			(each className) = 'VitalityBooster'			ifTrue:[				potionUser setMaxHp: ((potionUser getMaxHp) + (250*itemCount) ).				potionUser setHp: ( (potionUser getHp) + (250*itemCount) ).				].			(each className) = 'EnergyBooster'			ifTrue:[				potionUser setMaxMana: ((potionUser getMaxMana) + (250*itemCount) ).				potionUser setMana: ( (potionUser getMana) + (250*itemCount) ).				]. 			(each className) = 'Butterfly'			ifTrue:[				potionUser setMinDamage: ((potionUser getMinDamage) + (30 * itemCount)).				potionUser setMaxDamage: ((potionUser getMaxDamage) + (30 * itemCount)).				potionUser setEvasion: ((potionUser getEvasion) + (self calculatePercentage: 25 itemCount: itemCount ) ).				].			(each className) = 'Daedalus'			ifTrue:[				potionUser setMinDamage: ((potionUser getMinDamage) + (75 * itemCount)).				potionUser setMaxDamage: ((potionUser getMaxDamage) + (75 * itemCount)).				potionUser setChanceOf2xDamage: ((potionUser getChanceOf2xDamage) + (self calculatePercentage: 25 itemCount: itemCount ) ).				].			(each className) = 'Desolator'			ifTrue:[				potionUser setMinDamage: ((potionUser getMinDamage) + (50 * itemCount)).				potionUser setMaxDamage: ((potionUser getMaxDamage) + (50 * itemCount)).				enemy setArmor: {((enemy getArmor) - (5 * itemCount)) . 0 } max.				].			(each className) = 'Vanguard'			ifTrue:[				potionUser setMaxHp: ((potionUser getMaxHp) + (250*itemCount) ).				potionUser setHp: ( (potionUser getHp) + (250*itemCount) ).				potionUser setChanceOfDecreasingDamage: (self calculatePercentage: 20 itemCount: itemCount ).				].			(each className) = 'HeartofTarrasque'			ifTrue:[				potionUser setMaxHp: ((potionUser getMaxHp) + (250*itemCount) ).				potionUser setHp: ( (potionUser getHp) + (250*itemCount) ).				potionUser setIncreaseCurrentHpPercentage: ( (potionUser getIncreaseCurrentHpPercentage) + (self calculatePercentage: 7 itemCount: itemCount) ).				].		  ].	potionUser setItemSlot: ((potionUser getItemSlot) select: [ :each | ((each className) = 'HealthPotion') | ( (each className) = 'ManaPotion' ) ] ).! !!GameArena class methodsFor: 'choosing' stamp: 'user 5/11/2017 23:12'!chooseHeroForSentinel	"Returns the Sentinel hero that player has chosen"	|heroChoice hero|	heroChoice := UIManager default chooseFrom: #('Sven' 'Earthshaker' 'Mirana' 'Magina' 'Rylai' 'Ogre Magi') message: 'Player2: Choose a Sentinel hero'.	heroChoice = 1	ifTrue:[hero := Sven new ]	ifFalse:[		heroChoice = 2		ifTrue:[hero := Earthshaker new]		ifFalse:[			heroChoice = 3			ifTrue:[hero := Mirana new]			ifFalse:[				heroChoice = 4				ifTrue:[hero := Magina new]				ifFalse:[					heroChoice = 5					ifTrue:[hero := Rylai new]					ifFalse:[hero := OrgeMagi new]					].				].			].		].	^hero.! !!GameArena class methodsFor: 'choosing' stamp: 'user 5/16/2017 20:18'!chooseAction: hero player: playerName	"Returns the action list for player"	|action actionList|	actionList := { 'Attack' }.		(hero healthPotionCount) = 0	ifFalse:[ actionList := actionList , { 'HealthPotion' } ]. 	(hero manaPotionCount) = 0	ifFalse:[ actionList := actionList , { 'ManaPotion' } ].		(hero getSkillSlot) do: [:each | 		((each getIsPassive) = 0)		ifTrue:[ 			((each getRemainingCooldown) = 0) & (((each getManaUsage) < (hero getMana) ) | ((each getManaUsage) = (hero getMana) ))			ifTrue:[				actionList := actionList , { each className }				]. 			].		]. 	action := UIManager default chooseFrom: actionList values: actionList message: playerName , ' turn (' , (hero className) , ')'.	^action.! !!GameArena class methodsFor: 'choosing' stamp: 'user 5/11/2017 23:11'!chooseHeroForScourge	"Returns the Scourge hero that player has chosen"	|heroChoice hero|	heroChoice := UIManager default chooseFrom: #('Skeleton King' 'Tidehunter' 'Nyx Assassin' 'Mortred' 'Lion' 'Leshrac') message: 'Player1: Choose a Scourge hero'.	heroChoice = 1	ifTrue:[hero := SkeletonKing new ]	ifFalse:[		heroChoice = 2		ifTrue:[hero := Tidehunter new]		ifFalse:[			heroChoice = 3			ifTrue:[hero := NyxAssassin new]			ifFalse:[				heroChoice = 4				ifTrue:[hero := Mortred new]				ifFalse:[					heroChoice = 5					ifTrue:[hero := Lion new]					ifFalse:[hero := Leshrac new]					].				].			].		].	^hero.! !!GameArena class methodsFor: 'choosing' stamp: 'user 5/16/2017 20:04'!chooseItem: playerName	"Returns the list of items that the player has chosen"	|gold items itemChoice healthPotionCount manaPotionCount otherItemCount totalItemCount newTotalItemCount selectedItem|	gold := 11000.	healthPotionCount := 0.	manaPotionCount := 0.	otherItemCount := 0.	totalItemCount := ( ((healthPotionCount/2)ceiling)  + ((manaPotionCount/2)ceiling ) + otherItemCount).	items := {}.	[(gold > 0) & ( totalItemCount < 4)]	whileTrue:[		itemChoice := UIManager default chooseFrom: #('Battle Fury' 'Hood of Defiance' 'Vitality Booster' 'Energy Booster' 'Butterfly' 'Daedalus' 'Desolator' 'Vanguard' 'Heart of Tarrasque' 'Health Potion' 'Mana Potion') message: 'Choose an item for ' , playerName , ' (remaining item slot=' , (4-totalItemCount) asString , ',remaining gold=' , gold asString.		itemChoice = 1		ifTrue:[ selectedItem := BattleFury new]		ifFalse:[ 			itemChoice = 2			ifTrue:[ selectedItem := HoodofDefiance new]			ifFalse:[				itemChoice = 3				ifTrue:[selectedItem := VitalityBooster new]				ifFalse:[					itemChoice = 4					ifTrue:[selectedItem := EnergyBooster new]					ifFalse:[						itemChoice = 5						ifTrue:[selectedItem := Butterfly new]						ifFalse:[							itemChoice =6							ifTrue:[selectedItem :=Daedalus new]							ifFalse:[								itemChoice = 7								ifTrue:[selectedItem := Desolator new]								ifFalse:[									itemChoice = 8									ifTrue:[selectedItem :=Vanguard new]									ifFalse:[										itemChoice = 9										ifTrue:[selectedItem := HeartofTarrasque new]										ifFalse:[											itemChoice = 10											ifTrue:[selectedItem := HealthPotion new]											ifFalse:[selectedItem := ManaPotion new].											].										].									].								].							].						].					].				].			].		selectedItem className = #HealthPotion		ifTrue:[newTotalItemCount :=  ((((healthPotionCount+1)/2)ceiling)  + ((manaPotionCount/2)ceiling ) + otherItemCount) ]		ifFalse:[			selectedItem className = #ManaPotion			ifTrue:[ newTotalItemCount :=  (((healthPotionCount/2)ceiling)  + (((manaPotionCount+1)/2)ceiling ) + otherItemCount)  ]			ifFalse:[ newTotalItemCount :=  (((healthPotionCount/2)ceiling)  + ((manaPotionCount/2)ceiling ) + (otherItemCount + 1) ) ].			].				(selectedItem getCost) > gold		ifTrue:[ UIManager default inform: 'You do not have enough money for this item.' ].		newTotalItemCount > 4		ifTrue:[ UIManager default inform: 'You do not have enough slot for this item.' ].				((selectedItem getCost) > gold) | (newTotalItemCount > 4)		ifFalse:[			selectedItem className = #HealthPotion			ifTrue:[healthPotionCount := healthPotionCount +1 ]			ifFalse:[				selectedItem className = #ManaPotion				ifTrue:[ manaPotionCount := manaPotionCount +1  ]				ifFalse:[ otherItemCount := otherItemCount +1 ].				].			totalItemCount := newTotalItemCount.			gold := gold - (selectedItem getCost).			Transcript show: 'Remaining gold for ', (playerName asString), ': ' , (gold asString) ; cr.			items := items , {selectedItem}.			].		].		^items.! !Dota subclass: #Hero	instanceVariableNames: 'hp mana maxHp maxMana armor minDamage maxDamage itemSlot skillSlot lastAction plusManaEachTurn decreaseSkillDamagePercentage evasion chanceOf2xDamage chanceOfDecreasingDamage increaseCurrentHpPercentage decreaseEnemyAttack'	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!!Hero commentStamp: 'user 5/17/2017 22:06' prior: 0!Represent the heroes of the game.There are two types of heroes  Sentinels and Scourges.Each hero has a side, hp, mana, 2 skills, armor and a damage range.!!Hero methodsFor: 'updating' stamp: 'user 5/13/2017 21:02'!setChanceOfDecreasingDamage: newValue	chanceOfDecreasingDamage := newValue.! !!Hero methodsFor: 'updating' stamp: 'user 5/13/2017 21:03'!setIncreaseCurrentHpPercentage: newValue	increaseCurrentHpPercentage := newValue.! !!Hero methodsFor: 'updating' stamp: 'user 5/6/2017 18:39'!setMaxDamage: newMaxDamage	maxDamage := newMaxDamage.! !!Hero methodsFor: 'updating' stamp: 'user 5/6/2017 18:58'!setMaxHp: newMaxHp	maxHp := newMaxHp.! !!Hero methodsFor: 'updating' stamp: 'user 5/6/2017 18:59'!setArmor: newArmor	armor := newArmor.! !!Hero methodsFor: 'updating' stamp: 'user 5/6/2017 18:59'!setHp: newHp	"Sets hp of hero"	hp:= newHp.! !!Hero methodsFor: 'updating' stamp: 'user 5/6/2017 18:39'!setMinDamage: newMinDamage	minDamage := newMinDamage.! !!Hero methodsFor: 'updating' stamp: 'user 5/6/2017 18:58'!setItemSlot: newItemSlot	itemSlot := newItemSlot.! !!Hero methodsFor: 'updating' stamp: 'user 5/13/2017 21:02'!setChanceOf2xDamage: newValue	chanceOf2xDamage := newValue.! !!Hero methodsFor: 'updating' stamp: 'user 5/6/2017 18:58'!setMaxMana: newMaxMana	maxMana := newMaxMana.! !!Hero methodsFor: 'updating' stamp: 'user 5/13/2017 21:01'!setPlusManaEachTurn: newPlusManaEachTurn	plusManaEachTurn := newPlusManaEachTurn.! !!Hero methodsFor: 'updating' stamp: 'user 5/14/2017 23:06'!setSkillSlot: value	skillSlot := value.! !!Hero methodsFor: 'updating' stamp: 'user 5/6/2017 18:58'!setMana: newMana	mana := newMana.! !!Hero methodsFor: 'updating' stamp: 'user 5/13/2017 21:02'!setEvasion: newEvasion	evasion := newEvasion.! !!Hero methodsFor: 'updating' stamp: 'user 5/17/2017 20:11'!deleteItem: itemName	"Removes the first occurrence of the item with itemName from the itemSlot"	itemSlot := itemSlot asOrderedCollection.	itemSlot remove: (itemSlot detect: [:each | (each className) = itemName ] ). 	itemSlot := itemSlot asArray.! !!Hero methodsFor: 'updating' stamp: 'user 5/13/2017 21:01'!setDecreaseSkillDamagePercentage: newValue	decreaseSkillDamagePercentage := newValue.! !!Hero methodsFor: 'updating' stamp: 'user 5/15/2017 22:23'!setDecreaseEnemyAttack: value	decreaseEnemyAttack := value.! !!Hero methodsFor: 'updating' stamp: 'user 5/11/2017 22:27'!setLastAction: newLastAction	lastAction := newLastAction.! !!Hero methodsFor: 'printing' stamp: 'user 5/17/2017 20:13'!printHeroInfo	"Prints the hero name, hp, max hp, mana, max mana, last action, remaining potions and skills in cooldown to Transcript"	|activeSkills activeSkillsNotInCooldown|	Transcript show: 'Hero: ', (self className) ; cr.	Transcript show: (hp asString) , ' / ' , (maxHp asString) , ' HP' ; cr.	Transcript show: (mana asString) , ' / ' , (maxMana asString) , ' Mana' ; cr.	Transcript show: 'Last Action: ' , (lastAction asString) ; cr.	Transcript show: 'Remaining Potions: '.		itemSlot isEmpty	ifTrue:[ Transcript show: 'None']	ifFalse:[ 		(self healthPotionCount) = 0		ifFalse:[ Transcript show: ((self healthPotionCount) asString) ; show: ' Health '].		(self manaPotionCount) = 0		ifFalse:[ Transcript show: ((self manaPotionCount) asString) , ' Mana']		 ].	Transcript cr.		Transcript show: 'Skills in Cooldown: '.		activeSkills := skillSlot select:[:each | (each getIsPassive) = 0].	activeSkillsNotInCooldown := activeSkills select:[ :each | (each getRemainingCooldown) = 0 ].		((activeSkillsNotInCooldown) size) = ((activeSkills) size)	ifTrue:[ Transcript show: 'None']	ifFalse:[		skillSlot do:[ :each |			(each getIsPassive) = 0			ifTrue:[				(each getRemainingCooldown) = 0				ifFalse:[					Transcript show: ((each className) asString) , ' (not available for ', ((each getRemainingCooldown) asString), ' turns) ' 					]				].			].		].	Transcript cr.! !!Hero methodsFor: 'accessing' stamp: 'user 5/6/2017 18:59'!getMinDamage	^minDamage.! !!Hero methodsFor: 'accessing' stamp: 'user 5/6/2017 19:00'!getItemSlot	^itemSlot.! !!Hero methodsFor: 'accessing' stamp: 'user 5/6/2017 19:00'!getMana	^mana.! !!Hero methodsFor: 'accessing' stamp: 'user 5/13/2017 20:58'!getPlusManaEachTurn	^plusManaEachTurn.! !!Hero methodsFor: 'accessing' stamp: 'user 5/17/2017 20:11'!damageCalculation: damage enemyArmor: enemyArmor	"Returns the actual damage from given damage and enemy armor"	^(damage * (1 - ((0.06 * enemyArmor )/ (1 + (0.06 * enemyArmor ) ) ) )) roundTo: 1 .! !!Hero methodsFor: 'accessing' stamp: 'user 5/13/2017 21:00'!getIncreaseCurrentHpPercentage	^increaseCurrentHpPercentage.! !!Hero methodsFor: 'accessing' stamp: 'user 5/13/2017 20:59'!getChanceOfDecreasingDamage	^chanceOfDecreasingDamage.! !!Hero methodsFor: 'accessing' stamp: 'user 5/6/2017 19:00'!getMaxHp	^maxHp.! !!Hero methodsFor: 'accessing' stamp: 'user 4/27/2017 21:27'!getHp	"Returns hp of hero"	^hp.! !!Hero methodsFor: 'accessing' stamp: 'user 5/6/2017 19:00'!getArmor	^armor.	! !!Hero methodsFor: 'accessing' stamp: 'user 5/6/2017 18:59'!getSkillSlot	^skillSlot.! !!Hero methodsFor: 'accessing' stamp: 'user 5/6/2017 19:00'!getMaxDamage	^maxDamage.! !!Hero methodsFor: 'accessing' stamp: 'user 5/15/2017 23:55'!manaPotionCount	"Return the number of mana potions in the item slot of the hero"	^itemSlot count: [ :each | (each className) = 'ManaPotion' ].! !!Hero methodsFor: 'accessing' stamp: 'user 5/15/2017 23:55'!healthPotionCount	"Returns number of health potions in item slot of the hero"	^(itemSlot count: [ :each | (each className) = 'HealthPotion' ])! !!Hero methodsFor: 'accessing' stamp: 'user 5/6/2017 19:00'!getMaxMana	^maxMana.! !!Hero methodsFor: 'accessing' stamp: 'user 5/13/2017 20:59'!getChanceOf2xDamage	^chanceOf2xDamage.! !!Hero methodsFor: 'accessing' stamp: 'user 5/13/2017 20:59'!getEvasion	^evasion.! !!Hero methodsFor: 'accessing' stamp: 'user 5/15/2017 22:22'!getDecreaseEnemyAttack	^decreaseEnemyAttack.! !!Hero methodsFor: 'accessing' stamp: 'user 5/13/2017 20:58'!getDecreaseSkillDamagePercentage	^decreaseSkillDamagePercentage.! !Dota subclass: #Item	instanceVariableNames: 'cost'	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!!Item methodsFor: 'accessing' stamp: 'user 5/3/2017 23:40'!getCost	^cost.! !!Item methodsFor: 'updating' stamp: 'user 5/3/2017 23:44'!setCost: newCost	cost := newCost.! !Item subclass: #BattleFury	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BattleFury class	instanceVariableNames: ''!!BattleFury class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:32'!new	|obj|	obj := self basicNew.	obj setCost: 4500.		^obj.! !Item subclass: #Butterfly	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Butterfly class	instanceVariableNames: ''!!Butterfly class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:32'!new	|obj|	obj := self basicNew.	obj setCost: 5500.		^obj.! !Item subclass: #Daedalus	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Daedalus class	instanceVariableNames: ''!!Daedalus class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:32'!new	|obj|	obj := self basicNew.	obj setCost: 4500.	^obj.! !Item subclass: #Desolator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Desolator class	instanceVariableNames: ''!!Desolator class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:32'!new	|obj|	obj := self basicNew.	obj setCost: 4000.	^obj.! !Item subclass: #EnergyBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EnergyBooster class	instanceVariableNames: ''!!EnergyBooster class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:33'!new	|obj|	obj := self basicNew.	obj setCost: 1100.	^obj.! !Item subclass: #HealthPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HealthPotion class	instanceVariableNames: ''!!HealthPotion class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:33'!new	|obj|	obj := self basicNew.	obj setCost: 200.		^obj.! !Item subclass: #HeartofTarrasque	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HeartofTarrasque class	instanceVariableNames: ''!!HeartofTarrasque class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:33'!new	|obj|	obj := self basicNew.	obj setCost: 5600.	^obj.! !Item subclass: #HoodofDefiance	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HoodofDefiance class	instanceVariableNames: ''!!HoodofDefiance class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:33'!new	|obj|	obj := self basicNew.	obj setCost: 2000.	^obj.! !Item subclass: #ManaPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaPotion class	instanceVariableNames: ''!!ManaPotion class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:33'!new	|obj|	obj := self basicNew.	obj setCost: 200.	^obj.! !Hero subclass: #Scourge	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!Scourge subclass: #Leshrac	instanceVariableNames: 'pulseNova'	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!!Leshrac methodsFor: 'updating' stamp: 'user 5/15/2017 21:14'!setPulseNova: value	pulseNova := value.! !!Leshrac methodsFor: 'accessing' stamp: 'user 5/15/2017 21:13'!getPulseNova	^pulseNova.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Leshrac class	instanceVariableNames: ''!!Leshrac class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:13'!new	|obj|	obj := self basicNew.	obj setHp: 1518.	obj setMana: 1534.	obj setMaxHp: 1518.	obj setMaxMana: 1534.	obj setArmor: 12.	obj setMinDamage: 133.	obj setMaxDamage: 137.	obj setDecreaseEnemyAttack: 0.	obj setLastAction: 'None'.		obj setPulseNova: 0.		obj setSkillSlot: { SplitEarth new . PulseNova new }.		obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Scourge subclass: #Lion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Lion class	instanceVariableNames: ''!!Lion class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:13'!new	|obj|	obj := self basicNew.	obj setHp: 1609.	obj setMana: 1456.	obj setMaxHp: 1609.	obj setMaxMana: 1456.	obj setArmor: 9.	obj setMinDamage: 139.	obj setMaxDamage: 145.	obj setLastAction: 'None'.		obj setSkillSlot: { EarthSpike new . FingerofDeath new }.	obj setDecreaseEnemyAttack: 0.	obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Scourge subclass: #Mortred	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mortred class	instanceVariableNames: ''!!Mortred class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:13'!new	|obj|	obj := self basicNew.	obj setHp: 1754.	obj setMana: 892.	obj setMaxHp: 1754.	obj setMaxMana: 892.	obj setArmor: 18.	obj setMinDamage: 142.	obj setMaxDamage: 144.	obj setLastAction: 'None'.		obj setSkillSlot: { Blur new . CoupdeGrace new }.	obj setDecreaseEnemyAttack: 0.	obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 40.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Scourge subclass: #NyxAssassin	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NyxAssassin class	instanceVariableNames: ''!!NyxAssassin class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:14'!new	|obj|	obj := self basicNew.	obj setHp: 1784.	obj setMana: 1149.	obj setMaxHp: 1784.	obj setMaxMana: 1149.	obj setArmor: 14.	obj setMinDamage: 122.	obj setMaxDamage: 126.	obj setLastAction: 'None'.		obj setSkillSlot: { Impale new . ManaBurn new }.	obj setDecreaseEnemyAttack: 0.	obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Hero subclass: #Sentinel	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!Sentinel subclass: #Earthshaker	instanceVariableNames: 'x4Damage'	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!!Earthshaker methodsFor: 'updating' stamp: 'user 5/15/2017 21:33'!setx4Damage: value	x4Damage := value.! !!Earthshaker methodsFor: 'accessing' stamp: 'user 5/15/2017 21:32'!getx4Damage	^x4Damage.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Earthshaker class	instanceVariableNames: ''!!Earthshaker class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:14'!new	|obj|	obj := self basicNew.	obj setHp: 2270.	obj setMana: 1030.	obj setMaxHp: 2270.	obj setMaxMana: 1030.	obj setArmor: 10.	obj setMinDamage: 136.	obj setMaxDamage: 146.	obj setLastAction: 'None'.		obj setx4Damage: 0.	obj setDecreaseEnemyAttack: 0.	obj setSkillSlot: { Fissure new . EnchantTotem new }.		obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Sentinel subclass: #Magina	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Magina class	instanceVariableNames: ''!!Magina class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:14'!new	|obj|	obj := self basicNew.	obj setHp: 1495.	obj setMana: 1017.	obj setMaxHp: 1495.	obj setMaxMana: 1017.	obj setArmor: 14.	obj setMinDamage: 136.	obj setMaxDamage: 140.	obj setLastAction: 'None'.		obj setSkillSlot: { ManaBreak new . ManaVoid new }.	obj setDecreaseEnemyAttack: 0.	obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Sentinel subclass: #Mirana	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mirana class	instanceVariableNames: ''!!Mirana class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:14'!new	|obj|	obj := self basicNew.	obj setHp: 1697.	obj setMana: 996.	obj setMaxHp: 1697.	obj setMaxMana: 996.	obj setArmor: 16.	obj setMinDamage: 137.	obj setMaxDamage: 148.	obj setLastAction: 'None'.		obj setSkillSlot: { Starstorm new . SacredArrow new }.	obj setDecreaseEnemyAttack: 0.	obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Sentinel subclass: #OrgeMagi	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!OrgeMagi class	instanceVariableNames: ''!!OrgeMagi class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:14'!new	|obj|	obj := self basicNew.	obj setHp: 2426.	obj setMana: 1105.	obj setMaxHp: 2426.	obj setMaxMana: 1105.	obj setArmor: 16.	obj setMinDamage: 126.	obj setMaxDamage: 132.	obj setLastAction: 'None'.		obj setSkillSlot: { Fireblast new . Multicast new }.	obj setDecreaseEnemyAttack: 0.	obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Sentinel subclass: #Rylai	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Rylai class	instanceVariableNames: ''!!Rylai class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:14'!new	|obj|	obj := self basicNew.	obj setHp: 1609.	obj setMana: 1373.	obj setMaxHp: 1609.	obj setMaxMana: 1373.	obj setArmor: 9.	obj setMinDamage: 125.	obj setMaxDamage: 131.	obj setLastAction: 'None'.		obj setSkillSlot: { FreezingField new . FrostBite new }.	obj setDecreaseEnemyAttack: 0.	obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Scourge subclass: #SkeletonKing	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SkeletonKing class	instanceVariableNames: ''!!SkeletonKing class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:14'!new	|obj|	obj := self basicNew.	obj setHp: 2270.	obj setMana: 993.	obj setMaxHp: 2270.	obj setMaxMana: 993.	obj setArmor: 11.	obj setMinDamage: 151.	obj setMaxDamage: 153.	obj setLastAction: 'None'.		obj setSkillSlot: { WraithfireBlast new . VampiricAura new }.	obj setDecreaseEnemyAttack: 0.	obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Dota subclass: #Skill	instanceVariableNames: 'isPassive manaUsage cooldown remainingCooldown damage'	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!!Skill methodsFor: 'updating' stamp: 'user 5/6/2017 19:21'!setManaUsage: newManaUsage	manaUsage := newManaUsage.! !!Skill methodsFor: 'updating' stamp: 'user 5/6/2017 19:20'!setIsPassive: newIsPassive	isPassive := newIsPassive.! !!Skill methodsFor: 'updating' stamp: 'user 5/17/2017 21:55'!setCooldownToMax	"When player use a skill, the remaining cooldown is set the necessary cooldown turn"	remainingCooldown := cooldown.! !!Skill methodsFor: 'updating' stamp: 'user 5/17/2017 21:56'!updateCooldownAfterTurn	"Decrease remaining cooldown turn by 1"	remainingCooldown := {(remainingCooldown - 1) . 0} max.! !!Skill methodsFor: 'updating' stamp: 'user 5/6/2017 19:20'!setCooldown: newCooldown	cooldown := newCooldown.! !!Skill methodsFor: 'updating' stamp: 'user 5/6/2017 19:19'!setRemainingCooldown: newRemainingCooldown	remainingCooldown := newRemainingCooldown.! !!Skill methodsFor: 'updating' stamp: 'user 5/14/2017 23:37'!setDamage: newDamage	damage := newDamage.! !!Skill methodsFor: 'accessing' stamp: 'user 5/6/2017 19:19'!getRemainingCooldown	^remainingCooldown.! !!Skill methodsFor: 'accessing' stamp: 'user 5/6/2017 19:19'!getManaUsage	^manaUsage.! !!Skill methodsFor: 'accessing' stamp: 'user 5/6/2017 19:19'!getIsPassive	^isPassive.! !!Skill methodsFor: 'accessing' stamp: 'user 5/14/2017 23:37'!getDamage	^damage.! !!Skill methodsFor: 'accessing' stamp: 'user 5/6/2017 19:18'!getCooldown	^cooldown.! !Skill subclass: #AnchorSmash	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AnchorSmash class	instanceVariableNames: ''!!AnchorSmash class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:38'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 3.	obj setRemainingCooldown: 0.	obj setManaUsage: 60.	obj setDamage: 225.	^obj.! !Skill subclass: #Blur	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Blur class	instanceVariableNames: ''!!Blur class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:51'!new	|obj|	obj := self basicNew.	obj setIsPassive: 1.	^obj.! !Skill subclass: #CoupdeGrace	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CoupdeGrace class	instanceVariableNames: ''!!CoupdeGrace class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:51'!new	|obj|	obj := self basicNew.	obj setIsPassive: 1.	^obj.! !Skill subclass: #EarthSpike	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EarthSpike class	instanceVariableNames: ''!!EarthSpike class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:41'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 160.	obj setDamage: 260.	^obj.! !Skill subclass: #EnchantTotem	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EnchantTotem class	instanceVariableNames: ''!!EnchantTotem class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:52'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 50.	^obj.! !Skill subclass: #FingerofDeath	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FingerofDeath class	instanceVariableNames: ''!!FingerofDeath class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:41'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 8.	obj setRemainingCooldown: 0.	obj setManaUsage: 650.	obj setDamage: 850.	^obj.! !Skill subclass: #Fireblast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Fireblast class	instanceVariableNames: ''!!Fireblast class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:53'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 225.	obj setDamage: 220.	^obj.! !Skill subclass: #Fissure	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Fissure class	instanceVariableNames: ''!!Fissure class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:40'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 170.	obj setDamage: 260.	^obj.! !Skill subclass: #FreezingField	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FreezingField class	instanceVariableNames: ''!!FreezingField class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:42'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 8.	obj setRemainingCooldown: 0.	obj setManaUsage: 600.	obj setDamage: 800.	^obj.! !Skill subclass: #FrostBite	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FrostBite class	instanceVariableNames: ''!!FrostBite class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:42'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 150.	obj setDamage: 300.	^obj.! !Skill subclass: #GodsStrength	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GodsStrength class	instanceVariableNames: ''!!GodsStrength class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:55'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 200.	^obj.! !Skill subclass: #Impale	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Impale class	instanceVariableNames: ''!!Impale class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:40'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 225.	obj setDamage: 260.	^obj.! !Skill subclass: #ManaBreak	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaBreak class	instanceVariableNames: ''!!ManaBreak class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:56'!new	|obj|	obj := self basicNew.	obj setIsPassive: 1.	^obj.! !Skill subclass: #ManaBurn	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaBurn class	instanceVariableNames: ''!!ManaBurn class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:57'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 50.	^obj.! !Skill subclass: #ManaVoid	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManaVoid class	instanceVariableNames: ''!!ManaVoid class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:57'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 7.	obj setRemainingCooldown: 0.	obj setManaUsage: 275.	^obj.! !Skill subclass: #Multicast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Multicast class	instanceVariableNames: ''!!Multicast class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:57'!new	|obj|	obj := self basicNew.	obj setIsPassive: 1.	^obj.! !Skill subclass: #PulseNova	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PulseNova class	instanceVariableNames: ''!!PulseNova class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:58'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 0.	obj setRemainingCooldown: 0.	obj setManaUsage: 150.	^obj.! !Skill subclass: #Ravage	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Ravage class	instanceVariableNames: ''!!Ravage class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:39'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 8.	obj setRemainingCooldown: 0.	obj setManaUsage: 325.	obj setDamage: 380.	^obj.! !Skill subclass: #SacredArrow	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SacredArrow class	instanceVariableNames: ''!!SacredArrow class methodsFor: 'instance creation' stamp: 'user 5/14/2017 22:59'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 4.	obj setRemainingCooldown: 0.	obj setManaUsage: 100.	^obj.! !Skill subclass: #SplitEarth	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SplitEarth class	instanceVariableNames: ''!!SplitEarth class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:41'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 160.	obj setDamage: 300.	^obj.! !Skill subclass: #Starstorm	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Starstorm class	instanceVariableNames: ''!!Starstorm class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:40'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 4.	obj setRemainingCooldown: 0.	obj setManaUsage: 160.	obj setDamage: 300.	^obj.! !Skill subclass: #StormHammer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!StormHammer class	instanceVariableNames: ''!!StormHammer class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:39'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 140.	obj setDamage: 325.	^obj.! !Sentinel subclass: #Sven	instanceVariableNames: 'x2DamageForTurn'	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!!Sven methodsFor: 'updating' stamp: 'user 5/15/2017 21:47'!setx2DamageForTurn: value	x2DamageForTurn := value.! !!Sven methodsFor: 'accessing' stamp: 'user 5/15/2017 21:46'!getx2DamageForTurn	^x2DamageForTurn.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sven class	instanceVariableNames: ''!!Sven class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:14'!new	|obj|	obj := self basicNew.	obj setHp: 2198.	obj setMana: 874.	obj setMaxHp: 2198.	obj setMaxMana: 874.	obj setArmor: 14.	obj setMinDamage: 149.	obj setMaxDamage: 151.	obj setLastAction: 'None'.		obj setx2DamageForTurn: 0.	obj setDecreaseEnemyAttack: 0.	obj setSkillSlot: { StormHammer new . GodsStrength new }.		obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Scourge subclass: #Tidehunter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tidehunter class	instanceVariableNames: ''!!Tidehunter class methodsFor: 'instance creation' stamp: 'user 5/15/2017 23:14'!new	|obj|	obj := self basicNew.	obj setHp: 2316.	obj setMana: 998.	obj setMaxHp: 2316.	obj setMaxMana: 998.	obj setArmor: 11.	obj setMinDamage: 139.	obj setMaxDamage: 145.	obj setLastAction: 'None'.		obj setSkillSlot: { AnchorSmash new . Ravage new }.	obj setDecreaseEnemyAttack: 0.	obj setPlusManaEachTurn: 0.	obj setDecreaseSkillDamagePercentage: 0.	obj setEvasion: 0.	obj setChanceOf2xDamage: 0.	obj setChanceOfDecreasingDamage: 0.	obj setIncreaseCurrentHpPercentage: 0.	^obj.! !Skill subclass: #VampiricAura	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VampiricAura class	instanceVariableNames: ''!!VampiricAura class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:01'!new	|obj|	obj := self basicNew.	obj setIsPassive: 1.	^obj.! !Item subclass: #Vanguard	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Vanguard class	instanceVariableNames: ''!!Vanguard class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:34'!new	|obj|	obj := self basicNew.	obj setCost: 2500.		^obj.! !Item subclass: #VitalityBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VitalityBooster class	instanceVariableNames: ''!!VitalityBooster class methodsFor: 'instance creation' stamp: 'user 5/16/2017 20:34'!new	|obj|	obj := self basicNew.	obj setCost: 1200.	^obj.! !Skill subclass: #WraithfireBlast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400123'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WraithfireBlast class	instanceVariableNames: ''!!WraithfireBlast class methodsFor: 'instance creation' stamp: 'user 5/14/2017 23:38'!new	|obj|	obj := self basicNew.	obj setIsPassive: 0.	obj setCooldown: 5.	obj setRemainingCooldown: 0.	obj setManaUsage: 140.	obj setDamage: 300.	^obj.! !